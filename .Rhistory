indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
#same thing for out-of-staters
indiv_md_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above.
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_md= sum(`Contribution Amount`,  na.rm = TRUE))
small_nonmd_contributions <- month_contributions %>%
filter(state != "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_nonmd = sum(`Contribution Amount`,  na.rm = TRUE))
small_verysmall <- left_join(small_nonmd_contributions, md_contributors, by = c("Filing Period" = "Filing Period", "large_small" = "large_small") )
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
#same thing for out-of-staters
indiv_md_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
View(small_nonmd_contributions)
View(small_large)
View(newall_contribswithzips)
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
nonmd_contributions <- small_large %>%
filter(state != "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_nonmd = sum(`Contribution Amount`,  na.rm = TRUE))
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
View(indiv_md_contribs_count)
small_verysmall <- merge(nonmd_contributions, md_contributors, indiv_nonmd_contribs_count,  indiv_md_contribs_count,by = c("Filing Period" = "Filing Period", "large_small" = "large_small"))
small_verysmall <- merge(nonmd_contributions, md_contributors, indiv_nonmd_contribs_count,  indiv_md_contribs_count,by = c("Filing Period", "large_small"))
small_verysmall <- merge(nonmd_contributions, md_contributors, indiv_nonmd_contribs_count,  indiv_md_contribs_count,by=c("Filing Period", "large_small"))
?merge
small_verysmall <- merge(nonmd_contributions, md_contributors, by=c("Filing Period", "large_small"))
View(small_verysmall)
small_verysmall <- merge(nonmd_contributions, md_contributors, by=c("Filing Period", "large_small"))
View(small_verysmall)
library(purrr)
small_large <-   list(nonmd_contributors, md_contributors, indiv_nonmd_contribs_count, indiv_md_contribs_count) %>%
reduce(left_join, by = c("Filing Period", "large_small"))
NULL
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
#same thing for out-of-staters
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md = sum(count))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above.
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_md= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_nonmd = sum(`Contribution Amount`,  na.rm = TRUE))
small_large <-   list(nonmd_contributors, md_contributors, indiv_nonmd_contribs_count, indiv_md_contribs_count) %>%
reduce(left_join, by = c("Filing Period", "large_small"))
View(small_large)
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md_donors = sum(count))
#same thing for out-of-staters
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md_donors = sum(count))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above.
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_md_contributions= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_nonmd_contributions = sum(`Contribution Amount`,  na.rm = TRUE))
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md_donors = sum(count))
#same thing for out-of-staters
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md_donors = sum(count))
small_large  <- allcontribs_state_list_fromzips %>%
mutate(large_small = if_else(`Contribution Amount`  <= 20, "really_small", if_else(`Contribution Amount`  <= 200, "just_small", "large")))
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md_donors = sum(count))
#same thing for out-of-staters
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(total_md_donors = sum(count))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above.
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_md_contributions= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total_nonmd_contributions = sum(`Contribution Amount`,  na.rm = TRUE))
Master_list <-   list(nonmd_contributors, md_contributors, indiv_nonmd_contribs_count, indiv_md_contribs_count) %>%
reduce(left_join, by = c("Filing Period", "large_small"))
NULL
View(Master_list)
#######these next few queries are to create a count of individual donors based on names and addresses. I'm counting the times each name and address pops up. I'm sure there's an easier way to do this, but I'm pressed for time, so this hacky way will have to do.
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(md_donors = sum(count))
#same thing for out-of-staters
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(nomd_donors = sum(count))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above.
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(nonmd_contribs = sum(`Contribution Amount`,  na.rm = TRUE))
Master_list <-   list(nonmd_contributors, md_contributors, indiv_nonmd_contribs_count, indiv_md_contribs_count) %>%
reduce(left_join, by = c("Filing Period", "large_small"))
NULL
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`,`Contributor Name`, large_small, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(nomd_donors = sum(count))
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by(large_small, `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(nonmd_contribs = sum(`Contribution Amount`,  na.rm = TRUE))
Master_list <-   list(nonmd_contributors, md_contributors, indiv_nonmd_contribs_count, indiv_md_contribs_count) %>%
reduce(left_join, by = c("Filing Period", "large_small"))
View(indiv_nonmd_contribs)
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(md_donors = sum(count))
#same thing for out-of-staters
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`,`Contributor Name`, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by(large_small, `Filing Period`) %>%
summarise(nomd_donors = sum(count))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above.
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by( `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by( `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(nonmd_contribs = sum(`Contribution Amount`,  na.rm = TRUE))
#Merge, left join, etc only work for 2 dataframes. But this purr function is sweet at combining several dataframes together when not needing to left/right join. Now we can look at all the data from above queries together.
Master_list <-   list(nonmd_contributors, md_contributors, indiv_nonmd_contribs_count, indiv_md_contribs_count) %>%
reduce(left_join, by = c("Filing Period"))
NULL
#######these next few queries are to create a count of individual donors based on names and addresses. I'm counting the times each name and address pops up. I'm sure there's an easier way to do this, but I'm pressed for time, so this hacky way will have to do.
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- indiv_md_contribs %>%
group_by( `Filing Period`) %>%
summarise(md_donors = sum(count))
#same thing for out-of-staters
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(`Contributor Address`,`Contributor Name`, `Filing Period`)%>%
summarise(count = n())
indiv_nonmd_contribs_count <- indiv_nonmd_contribs %>%
group_by( `Filing Period`) %>%
summarise(nomd_donors = sum(count))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above.
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by( `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by( `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(nonmd_contribs = sum(`Contribution Amount`,  na.rm = TRUE))
#Merge, left join, etc only work for 2 dataframes. But this purr function is sweet at combining several dataframes together when not needing to left/right join. Now we can look at all the data from above queries together.
Master_list <-   list(nonmd_contributors, md_contributors, indiv_nonmd_contribs_count, indiv_md_contribs_count) %>%
reduce(left_join, by = c("Filing Period"))
NULL
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
n_distinct(`Contributor Address`)
NULL
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
n_distinct(`Contributor Address`, na.rm = T)
NULL
n_distinct( small_large$`Contributor Address`, na.rm = T)
n_distinct( small_large$`Contributor Name`, na.rm = T)
indiv_md_contribs  <-   small_large$`Contributor Address` %>%
filter(state == "MD")
indiv_md_contribs  <-   small_large$`Contributor Address` %>%
filter(state == "MD")
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")
n_distinct( small_large$`Contributor Name`, na.rm = T)
n_distinct( indiv_md_contribs$`Contributor Name`, na.rm = T)
count_(unique(small_large), vars = "Filing Period")
count_(unique(small_large), vars = `Filing Period`)
count_(unique(small_large), vars = "Filing Period")
count_(unique(small_large), vars = "FilingPeriod")
counttest <- indiv_md_contribs %>%
count_(unique(`Contributor Name`), vars = "Filing Period")
#says hey, if the contributions are less than or = to $20 say really small, <= 200 just say small. Else, say large.
small_large  <- allcontribs_state_list_fromzips %>%
mutate(large_small = if_else(`Contribution Amount`  <= 20, "really_small", if_else(`Contribution Amount`  <= 200, "just_small", "large")))
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")
Jealous_contributions <- read_csv("Jealous_contributions_new.csv")
#############TIME FOR ANALYSIS##############
Jealous_contributions_new <- Jealous_contributions  %>%
#here we're creating a dataframe of all entries that have the receiving committee equaling jealous. And it excludes in-kind and refund/rebate information
filter(`Receiving Committee` == "Jealous  Ben Friends of") %>%
filter(`Contribution Type` != "In-Kind") %>%
filter(`Contribution Type` != "Coordinated In-Kind") %>%
filter(`Contribution Type` != "Refund/Rebate")
#this also creates the a dataframe of rebartes and inkind donations that I pulled out of the contributions list. Just to see if I see something interesting.
jealous_inkind_rebates_all <- Jealous_contributions   %>%
#here we're creating a dataframe of all entries that have the receiving committee equaling jealous. And it excludes in-kind and refund/rebate information
filter(`Receiving Committee` == "Jealous  Ben Friends of") %>%
filter(`Contribution Type` == "In-Kind" | `Contribution Type` == "Refund/Rebate" | `Contribution Type` == "Coordinated In-Kind")
View(jealous_inkind_rebates_all)
#let's start exploring where in the world this money is coming from...We can do that by extracting zip codes.
#searches for all number combos that are either 5 digits long or 5 digits followed by 4 digits with a dash in between.
contributions_all_zips1 <- stri_extract_all_regex(Jealous_contributions_new$`Contributor Address`, "(?<!\\d)(\\d{5}(?:[-\\s]\\d{4})?)\\b")
contributions_all_5digitzips <- stri_extract_all_regex(contributions_all_zips1, "\\d{5}")
#I was getting some extra 5 digit combos from addresses, so I used this lapply command to just grab the last one, since the zip is always last.
contributions_all_zips2 <- map(contributions_all_5digitzips, function(x) x[length(x)])
#creates the dataframe Jealous_contributions_new as new contributions_all_zipz_df
contributions_all_zipz_df <- data_frame(contributions_all_zips2)
#changes the list to a numeric value. This helps the group by function which do4sn't like lists.
contributions_all_zipz_df %>% mutate_if(is.list, as.character) -> contributions_all_zipz_df
#changes the column header in the new dataframe to zip_codes. this will be helpful later on because it is unique.
colnames(contributions_all_zipz_df)[which(names(contributions_all_zipz_df) == "contributions_all_zips2")] <- "zip_codes"
#binds it to the hogan contributions database
newall_contribswithzips <- cbind(contributions_all_zipz_df, Jealous_contributions_new)
#ok, so now that we have our new list with the added zip codes, we can go through and group them and count them.
##########################4##########################
#now let's combine with the zip codfes database so we can group by state and county
#pulls the database of zip codes/state information
data(zipcode)
View(zipcode)
#creates a merged list of zip codes and the hogan information.
allcontribs_state_list_fromzips <-  left_join(newall_contribswithzips, zipcode, by =c("zip_codes" = "zip"))
small_large  <- allcontribs_state_list_fromzips %>%
mutate(large_small = if_else(`Contribution Amount`  <= 20, "really_small", if_else(`Contribution Amount`  <= 200, "just_small", "large")))
View(small_large)
View(small_large)
names(indiv_md_contribs)[3]<-paste("filingperiod")
View(indiv_md_contribs)
counttest <- indiv_md_contribs %>%
count_(unique(`Contributor Name`), vars = "filingperiod")
counttest <-  count_(unique(indiv_md_contribs$`Contributor Name`), vars = "filingperiod")
counttest <-  count_(unique(indiv_md_contribs$`Contributor Name`), vars = "filingperiod")
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Contributor Address`, `Contributor Name`, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs_count <- i
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(, `Filing Period`)%>%
summarise(count = n())
indiv_md_contribs  <-   small_large %>%
filter(state == "MD")%>%
group_by(`Filing Period`)%>%
summarise(count = n())
View(indiv_md_contribs)
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
summarise(count = n())
View(indiv_nonmd_contribs_count)
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by(state, `Filing Period`)
summarise(count = n())
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by( `Filing Period`, state)
summarise(count = n())
View(indiv_nonmd_contribs_count)
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by( state)
summarise(count = n())
indiv_nonmd_contribs  <-   small_large %>%
filter(state != "MD")%>%
group_by( `Filing Period`, state) %>%
summarise(count = n())
View(indiv_nonmd_contribs)
indiv_nonmd_contribs  <-   small_large %>%
filter(`Filing Period` == "2018 Gubernatorial Pre-General1 Report")%>%
group_by( `Filing Period`, state) %>%
summarise(count = n())
indiv_nonmd_contribs  <-   small_large %>%
filter(`Filing Period` == "2018 Gubernatorial Pre-General1 Report")%>%
group_by( `Filing Period`, state) %>%
summarise(count = n(), sum(`Contribution Amount`,  na.rm = TRUE))
indiv_nonmd_contribs  <-   small_large %>%
filter(`Filing Period` == "2018 Gubernatorial Pre-General1 Report")%>%
group_by( `Filing Period`, state) %>%
summarise(count = n(), total_contrib = sum(`Contribution Amount`,  na.rm = TRUE))
#######this query is to create a count of donors and how much they gave in this last cycle
indiv_contribs  <-   small_large %>%
filter(`Filing Period` == "2018 Gubernatorial Pre-General1 Report")%>%
group_by( `Filing Period`, state) %>%
summarise(count = n(), total_contrib = sum(`Contribution Amount`))
View(indiv_contribs)
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by( `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
nonmd_contributors<- small_large %>%
filter(state != "MD")%>%
group_by( `Filing Period`)%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(nonmd_contribs = sum(`Contribution Amount`,  na.rm = TRUE))
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by( large_small )%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
Jealous_contributions <- read_csv("Jealous_contributions_new.csv")
#############TIME FOR ANALYSIS##############
Jealous_contributions_new <- Jealous_contributions  %>%
#here we're creating a dataframe of all entries that have the receiving committee equaling jealous. And it excludes in-kind and refund/rebate information
filter(`Receiving Committee` == "Jealous  Ben Friends of") %>%
filter(`Contribution Type` != "In-Kind") %>%
filter(`Contribution Type` != "Coordinated In-Kind") %>%
filter(`Contribution Type` != "Refund/Rebate")
#this also creates the a dataframe of rebartes and inkind donations that I pulled out of the contributions list. Just to see if I see something interesting.
jealous_inkind_rebates_all <- Jealous_contributions   %>%
#here we're creating a dataframe of all entries that have the receiving committee equaling jealous. And it excludes in-kind and refund/rebate information
filter(`Receiving Committee` == "Jealous  Ben Friends of") %>%
filter(`Contribution Type` == "In-Kind" | `Contribution Type` == "Refund/Rebate" | `Contribution Type` == "Coordinated In-Kind")
View(jealous_inkind_rebates_all)
#let's start exploring where in the world this money is coming from...We can do that by extracting zip codes.
#searches for all number combos that are either 5 digits long or 5 digits followed by 4 digits with a dash in between.
contributions_all_zips1 <- stri_extract_all_regex(Jealous_contributions_new$`Contributor Address`, "(?<!\\d)(\\d{5}(?:[-\\s]\\d{4})?)\\b")
contributions_all_5digitzips <- stri_extract_all_regex(contributions_all_zips1, "\\d{5}")
#I was getting some extra 5 digit combos from addresses, so I used this lapply command to just grab the last one, since the zip is always last.
contributions_all_zips2 <- map(contributions_all_5digitzips, function(x) x[length(x)])
#creates the dataframe Jealous_contributions_new as new contributions_all_zipz_df
contributions_all_zipz_df <- data_frame(contributions_all_zips2)
#changes the list to a numeric value. This helps the group by function which do4sn't like lists.
contributions_all_zipz_df %>% mutate_if(is.list, as.character) -> contributions_all_zipz_df
#changes the column header in the new dataframe to zip_codes. this will be helpful later on because it is unique.
colnames(contributions_all_zipz_df)[which(names(contributions_all_zipz_df) == "contributions_all_zips2")] <- "zip_codes"
#binds it to the hogan contributions database
newall_contribswithzips <- cbind(contributions_all_zipz_df, Jealous_contributions_new)
#ok, so now that we have our new list with the added zip codes, we can go through and group them and count them.
##########################4##########################
#now let's combine with the zip codfes database so we can group by state and county
#pulls the database of zip codes/state information
data(zipcode)
View(zipcode)
#creates a merged list of zip codes and the hogan information.
allcontribs_state_list_fromzips <-  left_join(newall_contribswithzips, zipcode, by =c("zip_codes" = "zip"))
write_csv(allcontribs_state_list_fromzips, "allcontributionswithzips.csv")
#says hey, if the contributions are less than or = to $20 say really small, <= 200 just say small. Else, say large.
small_large  <- allcontribs_state_list_fromzips %>%
mutate(large_small = if_else(`Contribution Amount`  <= 20, "really_small", if_else(`Contribution Amount`  <= 200, "just_small", "large")))
#now we're looking at maryland contributors and non-maryland contributors and how much they gave in each of the categories that we set above
md_contributors  <-   small_large %>%
filter(state == "MD")%>%
group_by( large_small )%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
View(md_contributors)
md_contributors  <-   small_large %>%
filter(state == "MD" |`Filing Period` == "2018 Gubernatorial Pre-General1 Report" )%>%
group_by( large_small )%>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(md_contribs= sum(`Contribution Amount`,  na.rm = TRUE))
indiv_contribs  <-   small_large %>%
filter(`Filing Period` == "2018 Gubernatorial Pre-General1 Report")%>%
group_by( `Filing Period`, state) %>%
summarise(count = n(), total_contrib = sum(`Contribution Amount`))
View(indiv_contribs)
