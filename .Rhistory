#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
group_by(`Contributor Address`)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
count_ross_contribs[1:10,]
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
filter(unique(`Contributor Name`))
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
unique(`Contributor Name`))
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
unique(`Contributor Name`)
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
unique(`Contributor Name`)
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
unique(`Contributor Name`)
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
unique(`Contributor Name`)
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
unique(`Contributor Name`, )
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
distinct(`Contributor Name` )
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
distinct(`Contributor Name` ) %>%
group_by(`Contributor Name`)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
count_ross_contribs[1:10,]
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
distinct(`Contributor Name` ) %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
count_ross_contribs[1:10,]
View(count_ross_contribs)
View(all_contribs_from_maryland)
View(allcontribs_state_list_fromzips)
View(baker_contribs_all)
View(allcontribs_state_list_fromzips)
library(tidyverse)
library(stringi)
library(zipcode)
write_csv(allcontribs_state_list_fromzips, "allcontributionswithzips.csv")
View(shea_contribsby_employer1 )
shea_contribsby_employer1 <- shea_contribs_all %>%
#groups the values by the employer.name, condensing all duplicates.
group_by(`Employer Name`) %>%
#sums the values from the contribution amount column and places it into the group by we requested above.
summarise(total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
View(shea_contribsby_employer1 )
shea_contribsby_employer1 <- shea_contribs_all %>%
#groups the values by the employer.name, condensing all duplicates.
group_by(`Employer Name`) %>%
#sums the values from the contribution amount column and places it into the group by we requested above.
summarise(total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
library(tidyverse)
library(stringi)
library(zipcode)
shea_contribsby_employer1 <- shea_contribs_all %>%
#groups the values by the employer.name, condensing all duplicates.
group_by(`Employer Name`) %>%
#sums the values from the contribution amount column and places it into the group by we requested above.
summarise(total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
View(shea_contribsby_employer1 )
View(contributions_all_zipz_df)
View(all_contribs_from_maryland)
View(allcontribs_state_list_fromzips)
sum(madaleno_contribs_all$`Contribution Amount`)
count_shea_bigcontribs[1:2]
shea_contribs_all <- cleaned_contributions_new  %>%
#here we're creating a dataframe of all entries that have the receiving committee equaling shea. And it excludes in-kind and refund/rebate information
filter(`Receiving Committee` == "Jim Shea For Maryland") %>%
filter(`Contribution Type` != "In-Kind") %>%
filter(`Contribution Type` != "Coordinated In-Kind") %>%
filter(`Contribution Type` != "Refund/Rebate")
View(shea_contribs_all)
#this also creates the a dataframe of rebartes and inkind donations that I pulled out of the contributions list. Just to see if I see something interesting.
shea_inkind_rebates_all <- cleaned_contributions_new  %>%
#here we're creating a dataframe of all entries that have the receiving committee equaling shea. And it excludes in-kind and refund/rebate information
filter(`Receiving Committee` == "Jim Shea For Maryland") %>%
filter(`Contribution Type` == "In-Kind" | `Contribution Type` == "Refund/Rebate" | `Contribution Type` == "Coordinated In-Kind")
View(shea_inkind_rebates_all)
shea_contribsby_employer1 <- shea_contribs_all %>%
#groups the values by the employer.name, condensing all duplicates.
group_by(`Employer Name`) %>%
#sums the values from the contribution amount column and places it into the group by we requested above.
summarise(total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
View(shea_contribsby_employer1 )
shea_contribsby_employer1[1:10,]
shea_contribsby_occupation <- shea_contribs_all %>%
#the colum we are grouping
group_by(`Employer Occupation`) %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total = sum(`Contribution Amount`,  na.rm = TRUE)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
View(shea_contribsby_occupation)
shea_contribsby_occupation[1:10,]
library(tidyverse)
library(stringi)
library(zipcode)
contribs_indv_biz <- cleaned_contributions_new %>%
filter(`Contributor Type` == "Business/Group/Organization" | `Contributor Type` == "Individual") %>%
filter(`Contribution Type` != "Refund/Rebate") %>%
filter(`Contribution Type` != "Coordinated In-Kind")
total_count_under_250 <- contribs_indv_biz %>%
filter(`Contribution Amount` <= 250) %>%
group_by(`Receiving Committee`) %>%
summarise(count = n()) %>%
arrange(desc(`count`))
write_csv(total_count_under_250, path="export/total_count_under_250.csv")
total_count_under_250 <- contribs_indv_biz %>%
filter(`Contribution Amount` <= 250) %>%
group_by(`Receiving Committee`) %>%
summarise(count = n()) %>%
arrange(desc(`count`))
View(total_count_under_250)
total_sum_under_250 <- contribs_indv_biz %>%
filter(`Contribution Amount` <= 250) %>%
group_by(`Receiving Committee`) %>%
summarise(total_sum = sum(`Contribution Amount`)) %>%
arrange(desc(`total_sum`))
write_csv(total_sum_under_250, path="export/total_sum_under_250.csv")
View(total_sum_under_250)
total_sum_over_2500 <- contribs_indv_biz %>%
filter(`Contribution Amount` >= 2500) %>%
group_by(`Receiving Committee`) %>%
summarise(total_sum = sum(`Contribution Amount`)) %>%
arrange(desc(`total_sum`))
View(total_sum_over_2500)
View(total_sum_under_250)
mean_contribution <- contribs_indv_biz %>%
group_by(`Receiving Committee`) %>%
summarise(mean = mean(`Contribution Amount`)) %>%
arrange(desc(`mean`))
View(mean_contribution)
total_count_under_250 <- contribs_indv_biz %>%
filter(`Contribution Amount` <= 250) %>%
group_by(`Receiving Committee`) %>%
summarise(count = n()) %>%
arrange(desc(`count`))
total_contribs_count <- contribs_indv_biz %>%
group_by(`Receiving Committee`) %>%
summarise(count = n()) %>%
arrange(desc(`count`))
View(total_contribs_count)
total_sum_over_5000 <- out_state_by_candidate %>%
filter(`Contribution Amount` >= 5000) %>%
write_csv(total_sum_over_5000, path="export/total_sum_over_5000.csv")
library(tidyverse)
library(stringi)
library(zipcode)
total_sum_over_5000 <- out_state_by_candidate %>%
filter(`Contribution Amount` >= 5000) %>%
write_csv(total_sum_over_5000, path="export/total_sum_over_5000.csv")
#So Interesting.Columbia Maryland....6 donors for 100k? I smell self-funding.
#1    MD    Columbia     6 100950
#2    NY    New York    87  51861
#3    DC  Washington   109  30195
#4    MA   Cambridge     8  12600
#5    CA Bakersfield     2  12000
################################10#########################
#OK, I'm going to go ahead and see who these people are....
vignarajah_contribution_type  <- vignarajah_contribs_all %>%
#the colum we are grouping
group_by(`Contributor Type`)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n(), total = sum(`Contribution Amount`,  na.rm = TRUE)) %>%
#arrange the list in descending order
arrange(desc(total))
View(vignarajah_contribution_type)
vignarajah_contribution_type[1:10,]
#yep the candidate gave 100k to themselves.
#1                  Individual   930 334147.2
#2            Self (Candidate)     1 100000.0
#3 Business/Group/Organization     2    600.0
#######################5a##################
#because there's so muhc money from DC let's back up and just sort by states. That way we can see what's what as far as totals go.
count_vignarajah_just_states <- vignarajah_state_list_fromzips %>%
#the colum we are grouping
group_by(state)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n(), total = sum(`Contribution Amount`,  na.rm = TRUE)) %>%
#arrange the list in descending order
arrange(desc(total))
View(count_vignarajah_just_states)
count_vignarajah_just_states[1:10,]
#Interesting. Maryland contributed much more (100k is from the candidate), but CA, DC, and NY all did give some money....
#1    MD   334 168291.2
#2    NY   134  72926.0
#3    CA    93  48611.0
#4    DC   109  30195.0
#5    MA    25  21445.0
##########################6###########################
# now let's examine what these people's employer is. This categorty is a bit anemic, because many of the fields are left blank, but why not try, amirite?
count_vignarajah_states_jobs <- vignarajah_state_list_fromzips %>%
#the colum we are grouping
group_by(city, `Employer Name`)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n(), total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
View(count_vignarajah_states_jobs)
count_vignarajah_states_jobs[1:4]
#Meh, too many nulls to really be helpful, but got a few to look into.
#2    New York                       Self-Employed     7  12600
#5 Bakersfield Comprehensive Blood & Cancer Center     1   6000
#6 Bakersfield                       Self-Employed     1   6000
###############7#################
#Let's zoom back out then. Let's just group by employer name.
vignarajah_contribsby_employer1 <- vignarajah_contribs_all %>%
#groups the values by the employer.name, condensing all duplicates.
group_by(`Employer Name`) %>%
#sums the values from the contribution amount column and places it into the group by we requested above.
summarise(total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
View(vignarajah_contribsby_employer1 )
vignarajah_contribsby_employer1[1:10,]
#FINDING: Hmm unfortunately the NAs are a little too overwhelming to be totally useful, but it's interesting that Prince George's County employees gave 23k.
#1                                <NA> 178187.2
#2                       Self-Employed  29310.0
#3                        Not Employed  17499.0
#4                             Retired  15200.0
#5              Caravel Management LLC   6500.0
###############8#################
vignarajah_contribsby_occupation <- vignarajah_contribs_all %>%
#the colum we are grouping
group_by(`Employer Occupation`) %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(total = sum(`Contribution Amount`,  na.rm = TRUE)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
View(vignarajah_contribsby_occupation)
vignarajah_contribsby_occupation[1:10,]
#FINDING:Unfortunately NA and other are such runaways it's not even worth putting here.
###############9################
#Hey big spender, let's look at all the contributions ordered by amount....
vignarajah_contribs_sunmmed_arranged<- vignarajah_contribs_all %>%
group_by(`Contributor Name` ) %>%
#sums the values from the contribution amount column and places it into the group by we requested above.
summarise(total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
#show me what I just did
View(vignarajah_contribs_sunmmed_arranged)
vignarajah_contribs_sunmmed_arranged[1:10,]
#some people I don't know....Mario Batali. Heard that name.
#1 VIGNARAJAH  KRISHANTI 1e+05
#2         Batali  Mario 6e+03
#3      Blaustein  Susan 6e+03
#4        Boone  Cecilia 6e+03
#5         Harmon  James 6e+03
#################11##############
#I'd also like to look at big contributions versus big contributions. I will do that with these two functions. Small contribs, for contrinbutions less than 250 and big contributions more than 2500.
count_vignarajah_smallcontribs <- vignarajah_state_list_fromzips %>%
#the colum we are grouping
filter(`Contribution Amount` < 250 )  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n(), total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
count_vignarajah_smallcontribs[1:2]
count_vignarajah_bigcontribs <- vignarajah_state_list_fromzips %>%
#the colum we are grouping
filter(`Contribution Amount` > 2500 )  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n(), total = sum(`Contribution Amount`)) %>%
#arrange the list in descending order
arrange(desc(total))
count_vignarajah_bigcontribs[1:2]
#what's weird, is that baker didn't get a lot of large contribs, nor did he get a lot of small contribs. What's the average contribution amount?
mean(baker_contribs_all$`Contribution Amount`)
#########################3#################
#below I've just done al the means ot see them in one place.
mean(baker_contribs_all$`Contribution Amount`)
mean(shea_contribs_all$`Contribution Amount`)
mean(vignarajah_contribs_all$`Contribution Amount`)
mean(kamenetz_contribs_all$`Contribution Amount`)
mean(madaleno_contribs_all$`Contribution Amount`)
mean(ross_contribs_all$`Contribution Amount`)
mean(jealous_contribs_all$`Contribution Amount`)
#looks at the unique conrributors to the campaign
count_ross_contribs <- ross_state_list_fromzips %>%
#the colum we are grouping
distinct(`Contributor Name` ) %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
count_ross_contribs[1:10,]
# Sean Mussenden queries below here #
# Data check and exploration #
summary(cleaned_contributions_new)
# A look at value distribution by column #
receiving_committee <- cleaned_contributions_new %>%
group_by(`Receiving Committee`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contribution_type <- cleaned_contributions_new %>%
group_by(`Contribution Type`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
filing_period <- cleaned_contributions_new %>%
group_by(`Filing Period`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contribution_date <- cleaned_contributions_new %>%
group_by(`Contribution Date`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contribution_name <- cleaned_contributions_new %>%
group_by(`Contributor Name`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contributor_address <- cleaned_contributions_new %>%
group_by(`Contributor Address`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contributor_type <- cleaned_contributions_new %>%
group_by(`Contributor Type`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contribution_type <- cleaned_contributions_new %>%
group_by(`Contribution Type`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contributor_type <- cleaned_contributions_new %>%
group_by(`Contributor Type`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
contribution_amount <- cleaned_contributions_new %>%
group_by(`Contribution Amount`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
employer_name <- cleaned_contributions_new %>%
group_by(`Employer Name`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
employer_occupation <- cleaned_contributions_new %>%
group_by(`Employer Occupation`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
office <- cleaned_contributions_new %>%
group_by(`Office`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
fundtype <- cleaned_contributions_new %>%
group_by(`Fundtype`) %>%
summarise(count=n()) %>%
arrange(desc(`count`))
# creating data frames for specific queries
contribs_indv_biz <- cleaned_contributions_new %>%
filter(`Contributor Type` == "Business/Group/Organization" | `Contributor Type` == "Individual") %>%
filter(`Contribution Type` != "Refund/Rebate") %>%
filter(`Contribution Type` != "Coordinated In-Kind")
# filter(str_detect(`Contributor Type`, "Spouse"))
# Bar chart: total dollar amount from contributions from people or businesses/groups/organizations less than or equal to $250 for each candidate.
total_sum_under_250 <- contribs_indv_biz %>%
filter(`Contribution Amount` <= 250) %>%
group_by(`Receiving Committee`) %>%
summarise(total_sum = sum(`Contribution Amount`)) %>%
arrange(desc(`total_sum`))
write_csv(total_sum_under_250, path="export/total_sum_under_250.csv")
# Bar chart: total number of distinct contributions from people or businesses/groups/organizations less than or equal to $250 for each candidate.
total_contribs_count <- contribs_indv_biz %>%
group_by(`Receiving Committee`) %>%
summarise(count = n()) %>%
arrange(desc(`count`))
write_csv(total_count_under_250, path="export/total_count_under_250.csv")
# Bar chart: total dollar amount from contributions from people or businesses/groups/organizations greater than or equal to $2500 for each candidate.
total_sum_over_2500 <- contribs_indv_biz %>%
filter(`Contribution Amount` >= 2500) %>%
group_by(`Receiving Committee`) %>%
summarise(total_sum = sum(`Contribution Amount`)) %>%
arrange(desc(`total_sum`))
write_csv(total_sum_over_2500, path="export/total_sum_over_2500.csv")
# Bar chart: mean contribution from people or businesses/groups/organizations for each candidate.
mean_contribution <- contribs_indv_biz %>%
group_by(`Receiving Committee`) %>%
summarise(mean = mean(`Contribution Amount`)) %>%
arrange(desc(`mean`))
write_csv(mean_contribution, path="export/mean_contribution.csv")
# Layered Pie Chart: percentage of contributors to Jim Shea from different employers, only including people who included an employer.
shea_employers <- contribs_indv_biz %>%
filter(!is.na(`Employer Name`)) %>%
filter(`Receiving Committee` == "Jim Shea For Maryland") %>%
group_by(`Employer Name`) %>%
summarise(count = n()) %>%
mutate(freq = count/sum(count))%>%
arrange(desc(freq))
write_csv(shea_employers, path="export/shea_employers.csv")
# Small multiple maps of Kamenetz, Baker and Madaleno, showing total contributions by zip code.  With a dot showing where they’re from.
# Extract things that look like zip codes as a list
contributions_all_zips1 <- stri_extract_all_regex(contribs_indv_biz$`Contributor Address`, "(?<!\\d)(\\d{5}(?:[-\\s]\\d{4})?)\\b")
contributions_all_5digitzips <- stri_extract_all_regex(contributions_all_zips1, "\\d{5}")
contributions_all_zips2 <- map(contributions_all_5digitzips, function(x) x[length(x)])
# Turn it back into a dataframe
contributions_all_zipz_df <- data_frame(contributions_all_zips2)
# Convert the column in our dataframe
contributions_all_zipz_df %>% mutate_if(is.list, as.character) -> contributions_all_zipz_df
# Change the column header
colnames(contributions_all_zipz_df)[which(names(contributions_all_zipz_df) == "contributions_all_zips2")] <- "zip_codes"
#binds it back to the master data set
newall_contribswithzips <- cbind(contributions_all_zipz_df, contribs_indv_biz)
#load the database of zip codes/state information
data(zipcode)
#merge the zipcode list with our master data to get state information
allcontribs_state_list_fromzips <-  left_join(newall_contribswithzips, zipcode, by =c("zip_codes" = "zip"))
# Pull out only maryland contributors
all_contribs_from_maryland <- allcontribs_state_list_fromzips %>%
filter(state == "MD")
# KK
kk_by_zipcode_md <- all_contribs_from_maryland %>%
filter(str_detect(`Receiving Committee`, "Kevin")) %>%
group_by(`zip_codes`) %>%
summarise(total =sum(`Contribution Amount`) ) %>%
arrange(desc(`total`))
write_csv(kk_by_zipcode_md,path="export/kk_by_zipcode_md.csv")
# RB
rb_by_zipcode_md <- all_contribs_from_maryland %>%
filter(str_detect(`Receiving Committee`, "Baker")) %>%
group_by(`zip_codes`) %>%
summarise(total =sum(`Contribution Amount`) ) %>%
arrange(desc(`total`))
write_csv(rb_by_zipcode_md,path="export/rb_by_zipcode_md.csv")
# RM
rm_by_zipcode_md <- all_contribs_from_maryland %>%
filter(str_detect(`Receiving Committee`, "Madaleno")) %>%
group_by(`zip_codes`) %>%
summarise(total =sum(`Contribution Amount`) ) %>%
arrange(desc(`total`))
write_csv(rm_by_zipcode_md,path="export/rm_by_zipcode_md.csv")
# Matrix Chart with in-state and out-state for each candidate.
in_state_by_candidate <- allcontribs_state_list_fromzips %>%
filter(state == "MD") %>%
filter(!is.na(state)) %>%
group_by(`Receiving Committee`) %>%
summarise(in_state_total=sum(`Contribution Amount`)) %>%
arrange(desc(`in_state_total`))
out_state_by_candidate <- allcontribs_state_list_fromzips %>%
filter(state != "MD") %>%
filter(!is.na(state)) %>%
group_by(`Receiving Committee`) %>%
summarise(out_state_total=sum(`Contribution Amount`)) %>%
arrange(desc(`out_state_total`))
total_by_candidate <- allcontribs_state_list_fromzips %>%
filter(!is.na(state)) %>%
group_by(`Receiving Committee`) %>%
summarise(total=sum(`Contribution Amount`)) %>%
arrange(desc(`total`))
in_v_out_state_by_candidate <- left_join(in_state_by_candidate,out_state_by_candidate,by="Receiving Committee")
in_v_out_state_by_candidate <- left_join(in_v_out_state_by_candidate, total_by_candidate, by="Receiving Committee")
in_v_out_state_by_candidate <- in_v_out_state_by_candidate %>%
group_by(`Receiving Committee`) %>%
summarise(total = sum(total),
in_state_total = sum(in_state_total),
out_state_total = sum(out_state_total),
total_check = sum(out_state_total + in_state_total),
in_state_percentage = sum(in_state_total/total),
out_state_percentage = sum(out_state_total/total)
)
write_csv(in_v_out_state_by_candidate, path="export/in_v_out_state_by_candidate.csv")
total_sum_over_5000 <- out_state_by_candidate %>%
filter(`Contribution Amount` >= 5000) %>%
write_csv(total_sum_over_5000, path="export/total_sum_over_5000.csv")
total_sum_over_5000 <- allcontribs_state_list_fromzips %>%
filter(`Contribution Amount` >= 5000) %>%
filter(state != "MD")
write_csv(total_sum_over_5000, path="export/total_sum_over_5000.csv")
View(total_sum_over_5000)
total_sum_over_4000 <- allcontribs_state_list_fromzips %>%
filter(`Contribution Amount` >= 4000)
View(total_sum_over_4000)
total_sum_over_1000 <- allcontribs_state_list_fromzips %>%
filter(`Contribution Amount` >= 1000)
View(total_sum_over_1000)
write_csv(total_sum_over_5000, path="export/total_sum_over_1000.csv")
